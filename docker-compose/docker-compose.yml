services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
      - "8082:8082"  # Traefik metrics
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml:ro
      - traefik-acme:/acme
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.service=api@internal"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.localhost`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  obsidian:
    image: ghcr.io/linuxserver/obsidian:latest
    container_name: obsidian
    restart: unless-stopped
    security_opt:
      - no-new-privileges:false
      - seccomp:unconfined
    shm_size: "2gb"
    volumes:
      - obsidian-config:/config
      - obsidian-vaults:/vaults
    environment:
      - PUID=0
      - PGID=0
      - TZ=UTC
      - CUSTOM_USER=obsidian
      - PASSWORD=YOUR_PASSWORD_HERE
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.obsidian.rule=Host(`www.obsidian.dpo2u.com`)"
      - "traefik.http.routers.obsidian.tls=true"
      - "traefik.http.routers.obsidian.tls.certresolver=letsencrypt"
      - "traefik.http.services.obsidian.loadbalancer.server.port=3000"
      - "traefik.docker.network=docker-compose_traefik"

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    user: root
    ports:
      - "5678:5678"  # Expose n8n port for web access
    volumes:
      - n8n-data:/home/node/.n8n
      - obsidian-vaults:/obsidian-vaults:ro
      - /opt/leann:/opt/leann:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/bin/docker:/usr/bin/docker:ro
    environment:
      - N8N_HOST=www.n8n.dpo2u.com
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://www.n8n.dpo2u.com/
      - GENERIC_TIMEZONE=UTC
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      - N8N_METRICS=false
      - N8N_DISABLE_PRODUCTION_MAIN_PROCESS=false
      - N8N_SECURE_COOKIE=false
      - EXPRESS_TRUST_PROXY=true
      - PATH=/opt/leann:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE=true
      - OPENAI_API_KEY=YOUR_API_KEY_HERE
      - LEANN_API_TOKEN=YOUR_TOKEN_HERE
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`www.n8n.dpo2u.com`)"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"
      - "traefik.http.routers.n8n.service=n8n"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.docker.network=docker-compose_traefik"
      # n8n API bypass for MCP (direct container access)
      - "traefik.http.routers.n8n-api.rule=Host(`www.n8n.dpo2u.com`) && PathPrefix(`/api/v1`)"
      - "traefik.http.routers.n8n-api.tls=true"
      - "traefik.http.routers.n8n-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.n8n-api.service=n8n-api"
      - "traefik.http.routers.n8n-api.middlewares=n8n-api-headers"
      - "traefik.http.services.n8n-api.loadbalancer.server.port=5678"
      - "traefik.http.middlewares.n8n-api-headers.headers.customrequestheaders.X-Forwarded-Host=www.n8n.dpo2u.com"
      - "traefik.http.middlewares.n8n-api-headers.headers.customrequestheaders.X-Forwarded-Proto=https"

  n8n-mcp:
    image: node:20-alpine
    container_name: n8n-mcp
    restart: unless-stopped
    working_dir: /app
    volumes:
      - /opt/n8n-mcp:/app
    environment:
      - NODE_ENV=production
      - MCP_MODE=http
      - USE_FIXED_HTTP=true
      - PORT=3100
      - HOST=0.0.0.0
      - BASE_URL=https://www.n8n-mcp.dpo2u.com
      - AUTH_TOKEN=YOUR_TOKEN_HERE
      - CORS_ORIGIN=*
      - TRUST_PROXY=1
      - N8N_API_URL=http://n8n:5678
      - N8N_API_KEY=YOUR_API_KEY_HERE
      - MCP_LOG_LEVEL=info
      - NODE_DB_PATH=/app/data/nodes.db
      - REBUILD_ON_START=false
    command: sh -c "npm run build && npm run start:http:fixed"
    networks:
      - traefik
    labels:
      - "traefik.enable=false"

  firecrawl-mcp:
    image: node:20-alpine
    container_name: firecrawl-mcp
    restart: unless-stopped
    working_dir: /app
    volumes:
      - /opt/firecrawl-mcp-server:/app
    environment:
      - NODE_ENV=production
      - FIRECRAWL_API_KEY=YOUR_API_KEY_HERE
      - PORT=3200
      - HOST=0.0.0.0
      - CLOUD_SERVICE=true
      - FIRECRAWL_API_URL=https://api.firecrawl.dev
      - LOG_LEVEL=info
    command: sh -c "npm run start"
    networks:
      - traefik
    labels:
      - "traefik.enable=false"

  leann-api:
    image: node:20-alpine
    container_name: leann-api
    restart: unless-stopped
    working_dir: /app
    volumes:
      - /opt/leann-api:/app
      - obsidian-vaults:/obsidian-vaults:ro
      - /opt/leann:/opt/leann:ro
      - /root/.local/share:/root/.local/share:ro
    environment:
      - NODE_ENV=production
      - PORT=3300
    command: sh -c "npm install && npm start"
    networks:
      - traefik
    labels:
      - "traefik.enable=false"

  prometheus-pushgateway:
    image: prom/pushgateway:latest
    container_name: prometheus-pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    networks:
      - traefik
    labels:
      - "traefik.enable=false"

networks:
  traefik:
    external: false

volumes:
  portainer-data:
  traefik-acme:
  obsidian-config:
  obsidian-vaults:
  n8n-data: