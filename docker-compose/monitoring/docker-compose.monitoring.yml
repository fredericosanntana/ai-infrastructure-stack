version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    networks:
      - traefik
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.dpo2u.com`)"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=docker-compose_traefik"
      # Basic Auth for security (temporarily disabled for testing)
      # - "traefik.http.routers.prometheus.middlewares=prometheus-auth"
      # - "traefik.http.middlewares.prometheus-auth.basicauth.users=admin:$$2y$$10$$EqZZn6s6JU9t8MrzXoavl.bXxXzPqm5EV8Y2dGm4p.Gm1qB3qj6PS" # admin:prometheus123

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=system123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://grafana.dpo2u.com/
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_SERVER_DOMAIN=grafana.dpo2u.com
      - GF_SERVER_ENFORCE_DOMAIN=false
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=grafana-postgres:5432
      - GF_DATABASE_NAME=grafana
      - GF_DATABASE_USER=grafana
      - GF_DATABASE_PASSWORD=grafana123
      - GF_SESSION_PROVIDER=file
      - GF_SESSION_PROVIDER_CONFIG=
      - GF_SESSION_COOKIE_SECURE=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - traefik
      - monitoring
    depends_on:
      - grafana-postgres
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.dpo2u.com`)"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=docker-compose_traefik"

  grafana-postgres:
    image: postgres:15-alpine
    container_name: grafana-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=grafana
      - POSTGRES_USER=grafana
      - POSTGRES_PASSWORD=grafana123
    volumes:
      - grafana-postgres-data:/var/lib/postgresql/data
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    networks:
      - monitoring

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=postgresql://billionmail:billionmail@billionmail-pgsql-billionmail-1:5432/billionmail?sslmode=disable
    networks:
      - monitoring
      - billionmail_billionmail-network

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    restart: unless-stopped
    environment:
      - REDIS_ADDR=redis://billionmail-redis-billionmail-1:6379
    networks:
      - monitoring
      - billionmail_billionmail-network

  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    restart: unless-stopped
    volumes:
      - ./monitoring/configs/blackbox.yml:/config/blackbox.yml:ro
    command:
      - '--config.file=/config/blackbox.yml'
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://alertmanager.dpo2u.com'
    volumes:
      - ./configs/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    networks:
      - traefik
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.dpo2u.com`)"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.routers.alertmanager.tls.certresolver=letsencrypt"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
      - "traefik.docker.network=docker-compose_traefik"
      # Basic Auth for security (temporarily disabled for testing)
      # - "traefik.http.routers.alertmanager.middlewares=alertmanager-auth"
      # - "traefik.http.middlewares.alertmanager-auth.basicauth.users=admin:$$2y$$10$$EqZZn6s6JU9t8MrzXoavl.bXxXzPqm5EV8Y2dGm4p.Gm1qB3qj6PS" # admin:prometheus123

networks:
  monitoring:
    external: false
  traefik:
    external: true
    name: docker-compose_traefik
  billionmail_billionmail-network:
    external: true

volumes:
  prometheus-data:
  grafana-data:
  grafana-postgres-data:
  alertmanager-data: